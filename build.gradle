plugins {
    id 'dev.architectury.loom' version '1.7-SNAPSHOT' apply false
    id 'architectury-plugin' version '3.4-SNAPSHOT'
    id 'com.github.johnrengelman.shadow' version '8.1.1' apply false
    id "io.github.pacifistmc.forgix" version "1.2.9"
	id ("io.github.p03w.machete") version "2.0.1"
}

architectury {
    minecraft = project.minecraft_version
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"

    archivesBaseName = rootProject.archives_name
    version = rootProject.mod_version
    group = rootProject.maven_group

    repositories {
        // Add repositories to retrieve artifacts from in here.
        // You should only use this when depending on other mods because
        // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
        // See https://docs.gradle.org/current/userguide/declaring_repositories.html
        // for more information about repositories.

        maven { url = "https://maven.shedaniel.me/" } // Cloth Config, REI
	    maven { url = "https://maven.parchmentmc.org" } // Parchment mappings
	    maven { url = "https://api.modrinth.com/maven" } // LazyDFU
	    maven { url = "https://maven.terraformersmc.com/releases/" } // Mod Menu
	    maven { url = "https://mvn.devos.one/snapshots/" } // Create, Porting Lib, Forge Tags, Milk Lib, Registrate
	    maven { url = "https://mvn.devos.one/releases/" } // Porting Lib Releases
	    maven { url = "https://raw.githubusercontent.com/Fuzss/modresources/main/maven/" } // Forge Config API Port
	    maven { url = "https://maven.jamieswhiteshirt.com/libs-release" } // Reach Entity Attributes
	    maven { url = "https://jitpack.io/" } // Mixin Extras, Fabric ASM
	    maven { url = "https://maven.tterrag.com/" } // Flywheel
    }

    forgix {
        group = "net.playerxess.smorestuff"
        mergedJarName = "create-smorestuff-${mod_version}-${minecraft_version}.jar"
    }

}

subprojects {
    apply plugin: 'dev.architectury.loom'
    apply plugin: 'architectury-plugin'
    apply plugin: 'maven-publish'

    base {
        // Set up a suffixed format for the mod jar names, e.g. `example-fabric`.
        archivesName = "$rootProject.archives_name-$project.name"
    }

    repositories {
        // Add repositories to retrieve artifacts from in here.
        // You should only use this when depending on other mods because
        // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
        // See https://docs.gradle.org/current/userguide/declaring_repositories.html
        // for more information about repositories.
    }

    dependencies {
        minecraft "net.minecraft:minecraft:$rootProject.minecraft_version"
        mappings "net.fabricmc:yarn:$rootProject.yarn_mappings:v2"
        modImplementation("net.fabricmc.fabric-api:fabric-api:${fabric_api_version}")
    }

    java {
        // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
        // if it is present.
        // If you remove this line, sources will not be generated.
        withSourcesJar()

        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    tasks.withType(JavaCompile).configureEach {
        it.options.release = 17
    }

    // Configure Maven publishing.
    publishing {
        publications {
            mavenJava(MavenPublication) {
                artifactId = base.archivesName.get()
                from components.java
            }
        }

        // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
        repositories {
            // Add repositories to publish to here.
            // Notice: This block does NOT have the same function as the block in the top level.
            // The repositories here will be used for publishing your artifact, not for
            // retrieving dependencies.
        }
    }

    build.finalizedBy(mergeJars)
    assemble.finalizedBy(mergeJars)

}
